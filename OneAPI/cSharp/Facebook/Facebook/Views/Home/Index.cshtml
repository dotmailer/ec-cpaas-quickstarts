@using Microsoft.AspNet.Identity

@model Facebook.Models.HomeIndexViewModel

@{
    ViewBag.Title = "Home Page";
}

@section head {
    <!-- Facebook Send to Messenger standard code to include in the head of the page -->
    <script lang="Javascript">
        window.fbAsyncInit = function () {
            FB.init({
                appId: "336037380081042",
                xfbml: true,
                version: "v2.6"
            });
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <h1>@ViewBag.Title</h1>
            <p>
                You will need to add the Facebook <b>Send to Messenger"</b> web plugin to your website to get permission to send the user messages
                via Facebook. This would usually be on your check out page etc...
            </p>
            <p>
                When it is clicked a unique Facebook Messenger Id will be created for the user you are logged in with and your Facebook page, and then automatically sent to
                Engagement Cloud CPaaS where a <b>fbMessengerId</b> field will be added to the profile you indicated using the <b>data-ref</b> field on the Send to Messenger control
            </p>
            <p>
                To try this out do the following:
            </p>
            <ol class="round">
                <li class="one">
                    <h5>Register a user</h5>
                    Click on the <b>Register</b> button in the top right and create a user
                </li>

                <li class="two">
                    <h5>Opt-in to messages</h5>
                    Once registered return to this page and the <b>Send to Messenger</b> Facebook web plugin should be rendered. Click the <b>Send to Messenger</b> button.
                </li>

                <li class="three">
                    <h5>Send a test message</h5>
                    Click the <b>Send Simple Test Message</b> or <b>Send Rich Test Message</b> to test
                </li>
            </ol>
        </div>
    </section>
}

<!-- Render Facebook Send to Messenger control if logged in -->
@if (Request.IsAuthenticated)
{
    <h3>Click below to recieve updates via Facebook Messenger</h3>
    <hr />

    <!-- The data-ref field will be populated with the metadata returned from Engagement Cloud CPaaS's Facebook webservice', add your own Facebook page_id -->
    <div class="fb-send-to-messenger"
         messenger_app_id="336037380081042"
         page_id="@(Model.FacebookPageId)"
         data-ref="@((Model.FacebookMetaData != null) ? Model.FacebookMetaData : String.Empty)"
         color="blue" size="large">
    </div>
    <div>
        <hr />
        <input type="button" value="Send Simple Test Message" onclick="location.href='@Url.Action("TestMessage", "Home")'" />
        <input type="button" value="Send Rich Test Message" onclick="location.href='@Url.Action("TestRichMessage", "Home")'" />
    </div>
}
else
{
    <!-- Test message buttons -->
    <h3>You must be logged in first, follow the instructions above...</h3>
}

<!-- Test message feedback toast -->
@if (Model.TestMessageResult != null)
{
    <script language="Javascript">
        // Setup Toastr
        toastr.options.closeButton = true;
        toastr.options.closeMethod = 'fadeOut';
        toastr.options.closeDuration = 300;
        toastr.options.closeEasing = 'swing';
        toastr.options.progressBar = true;

        @if (Model.TestMessageResult.Success) {
            @:toastr.success("@Model.TestMessageResult.FeedbackMessage", "Test message sent");
        }
        else {
            @:toastr.error("@Model.TestMessageResult.FeedbackMessage", "Test message failed");
            @:console.error("@string.Format("{0}: {1}", Model.TestMessageResult.FeedbackMessage, Model.TestMessageResult.ErrorMessage)");
        }

    </script>
}
